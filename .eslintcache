[{"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx":"1","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts":"2","/Users/simonhales/WebstormProjects/action-game/src/index.tsx":"3","/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts":"4","/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts":"5","/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx":"6","/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts":"7","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx":"8","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx":"9","/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/Player.tsx":"10","/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts":"11","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx":"12","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts":"13","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx":"14","/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts":"15","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx":"16","/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx":"17","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx":"18","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx":"19","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts":"20","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx":"21","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/Camera/Camera.tsx":"22","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx":"23","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx":"24","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts":"25","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts":"26","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts":"27","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx":"28","/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/hooks/useController.ts":"29","/Users/simonhales/WebstormProjects/action-game/src/game/meshes/components/MeshRefs/MeshRefs.tsx":"30","/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts":"31","/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts":"32","/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider.tsx":"33","/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts":"34","/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/MeshSubscriptions/MeshSubscriptions.tsx":"35","/Users/simonhales/WebstormProjects/action-game/src/game/worker/main/components/MeshLerper/MeshLerper.tsx":"36","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts":"37","/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts":"38","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts":"39","/Users/simonhales/WebstormProjects/action-game/src/game/meshes/uuids.ts":"40","/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts":"41","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/TouchHandler/TouchHandler.tsx":"42"},{"size":1618,"mtime":1609642807005,"results":"43","hashOfConfig":"44"},{"size":5230,"mtime":1609860002260,"results":"45","hashOfConfig":"44"},{"size":515,"mtime":1609486938761,"results":"46","hashOfConfig":"44"},{"size":969,"mtime":1609642790500,"results":"47","hashOfConfig":"44"},{"size":327,"mtime":1609642026794,"results":"48","hashOfConfig":"44"},{"size":169,"mtime":1609558795178,"results":"49","hashOfConfig":"44"},{"size":1473,"mtime":1609821522327,"results":"50","hashOfConfig":"44"},{"size":1882,"mtime":1609795704604,"results":"51","hashOfConfig":"44"},{"size":1496,"mtime":1609642813396,"results":"52","hashOfConfig":"44"},{"size":1064,"mtime":1609888362312,"results":"53","hashOfConfig":"44"},{"size":425,"mtime":1609483309640,"results":"54","hashOfConfig":"44"},{"size":4359,"mtime":1609889511072,"results":"55","hashOfConfig":"44"},{"size":670,"mtime":1609507892885,"results":"56","hashOfConfig":"44"},{"size":1662,"mtime":1609757247528,"results":"57","hashOfConfig":"44"},{"size":568,"mtime":1609559863619,"results":"58","hashOfConfig":"44"},{"size":481,"mtime":1609940930091,"results":"59","hashOfConfig":"44"},{"size":330,"mtime":1609749827670,"results":"60","hashOfConfig":"44"},{"size":172,"mtime":1609646322248,"results":"61","hashOfConfig":"44"},{"size":3033,"mtime":1609642152497,"results":"62","hashOfConfig":"44"},{"size":328,"mtime":1609940426327,"results":"63","hashOfConfig":"44"},{"size":448,"mtime":1609749739518,"results":"64","hashOfConfig":"44"},{"size":1240,"mtime":1609647722847,"results":"65","hashOfConfig":"44"},{"size":401,"mtime":1609751892777,"results":"66","hashOfConfig":"44"},{"size":1602,"mtime":1609761534728,"results":"67","hashOfConfig":"44"},{"size":556,"mtime":1609555207685,"results":"68","hashOfConfig":"44"},{"size":299,"mtime":1609858606200,"results":"69","hashOfConfig":"44"},{"size":774,"mtime":1609509393977,"results":"70","hashOfConfig":"44"},{"size":1947,"mtime":1609509491258,"results":"71","hashOfConfig":"44"},{"size":1139,"mtime":1609940426321,"results":"72","hashOfConfig":"44"},{"size":1694,"mtime":1609758949150,"results":"73","hashOfConfig":"44"},{"size":8320,"mtime":1609940426325,"results":"74","hashOfConfig":"44"},{"size":602,"mtime":1608030846328,"results":"75","hashOfConfig":"44"},{"size":3835,"mtime":1609888635028,"results":"76","hashOfConfig":"44"},{"size":44,"mtime":1609889601860,"results":"77","hashOfConfig":"44"},{"size":4388,"mtime":1609940426322,"results":"78","hashOfConfig":"44"},{"size":691,"mtime":1609889602351,"results":"79","hashOfConfig":"44"},{"size":88,"mtime":1609752231122,"results":"80","hashOfConfig":"44"},{"size":725,"mtime":1609940426327,"results":"81","hashOfConfig":"44"},{"size":700,"mtime":1609753545982,"results":"82","hashOfConfig":"44"},{"size":58,"mtime":1609756233222,"results":"83","hashOfConfig":"44"},{"size":76,"mtime":1608030846328,"results":"84","hashOfConfig":"44"},{"size":8225,"mtime":1609941145935,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"1eylt58",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"113"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx",["183","184"],"import React, {useEffect, useLayoutEffect, useState} from \"react\"\nimport { WorkersContext } from \"./context\"\nimport {useMessagesContext} from \"../Messages/context\";\nimport {WorkerOwnerMessageType} from \"../../workers/physics/types\";\nimport {MessageData} from \"../../workers/shared/types\";\n\nconst Workers: React.FC = ({children}) => {\n    const [physicsWorker, setPhysicsWorker] = useState<Worker | null>(null)\n    const [logicWorker, setLogicWorker] = useState<Worker | null>(null)\n\n    const {\n        handleMessage,\n    } = useMessagesContext()\n\n    useLayoutEffect(() => {\n        const physWorker = new Worker('../../workers/physics', { name: 'physicsWorker', type: 'module' })\n        const logiWorker = new Worker('../../workers/logic', { name: 'logicWorker', type: 'module' })\n        setPhysicsWorker(physWorker)\n        setLogicWorker(logiWorker)\n        const channel = new MessageChannel()\n        physWorker.postMessage({command: \"connect\"}, [channel.port1])\n        logiWorker.postMessage({command: \"connect\"}, [channel.port2])\n\n        logiWorker.onmessage= (event: MessageEvent) => {\n\n            const type = event.data.type\n\n            switch (type) {\n                case WorkerOwnerMessageType.MESSAGE:\n                    handleMessage(event.data.message as MessageData)\n                    break;\n            }\n\n        }\n\n    }, [])\n\n    if (!physicsWorker || !logicWorker) return null\n\n    return (\n        <WorkersContext.Provider value={{\n            physicsWorker,\n            logicWorker,\n        }}>\n            {children}\n        </WorkersContext.Provider>\n    )\n}\n\nexport default Workers",["185","186"],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts",[],["187","188"],"/Users/simonhales/WebstormProjects/action-game/src/index.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts",["189"],"/* eslint-disable no-restricted-globals */\n\n// because of some weird react/dev/webpack/something quirk\nimport {WorkerMessageType} from \"../physics/types\";\n\n(self as any).$RefreshReg$ = () => {};\n(self as any).$RefreshSig$ = () => () => {};\n\nconst setWorker = require(\"./react\").setWorker\nconst init = require(\"./react\").init\n\nlet physicsWorkerPort: MessagePort\n\nconst selfWorker = self as unknown as Worker\n\nselfWorker.onmessage = (event: MessageEvent) => {\n\n    switch( event.data.command )\n    {\n\n        case \"connect\":\n            physicsWorkerPort = event.ports[0];\n            setWorker(physicsWorkerPort)\n            return\n\n        case \"forward\":\n            physicsWorkerPort.postMessage( event.data.message );\n            return\n    }\n\n    const {type, props = {}} = event.data as {\n        type: WorkerMessageType,\n        props: any,\n    };\n\n    switch (type) {\n        case WorkerMessageType.INIT:\n            init()\n            break;\n    }\n\n}\n\nexport {}",["190","191"],"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx",[],["192","193"],"/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx",["194","195","196","197","198"],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/Player.tsx",["199"],"import React, {useRef} from \"react\"\nimport Character from \"../../../../../3d/components/Character/Character\"\nimport {degToRad} from \"../../../../../utils/angles\";\nimport {useController} from \"./hooks/useController\";\nimport {getPlayerUuid} from \"../../../../meshes/uuids\";\nimport {Object3D} from \"three\";\nimport {useStoreMesh} from \"../../../../meshes/components/MeshRefs/MeshRefs\";\nimport {useBodyApi, useBodySync} from \"../../../../../physics/hooks/hooks\";\nimport {useAddMeshSubscription} from \"../../../../worker/components/MeshSubscriptions/MeshSubscriptions\";\n\nconst Player: React.FC = () => {\n\n    const uuid = getPlayerUuid()\n    const ref = useRef<Object3D>(new Object3D())\n    useAddMeshSubscription(uuid, ref.current, false)\n    // useBodySync(ref, uuid, true, false)\n    useStoreMesh(uuid, ref.current)\n    const api = useBodyApi(uuid)\n    useController(uuid, api)\n\n    return (\n        <group ref={ref}>\n            <group rotation={[degToRad(90), 0, 0]}>\n                <Character/>\n            </group>\n        </group>\n    )\n}\n\nexport default Player",["200","201"],"/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx",["202"],"import React, {useEffect} from \"react\"\nimport {useWorkersContext} from \"../../../../../../components/Workers/context\";\nimport PhysicsProvider, {useBuffers} from \"../../../../../../physics/components/PhysicsProvider/PhysicsProvider\";\nimport {useCollisionsProviderContext} from \"../../../../../../physics/components/CollisionsProvider/context\";\nimport {WorkerMessageType, WorkerOwnerMessageType} from \"../../../../../../workers/physics/types\";\nimport {storedPhysicsData} from \"../../../../../../physics/data\";\nimport CollisionsProvider from \"../../../../../../physics/components/CollisionsProvider/CollisionsProvider\";\nimport WorkerOnMessageProvider, {useWorkerOnMessage} from \"../../../../../worker/components/WorkerOnMessageProvider/WorkerOnMessageProvider\";\nimport PhysicsWorkerFixedUpdateProvider from \"../../../../../worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider\";\nimport MeshSubscriptions from \"../../../../../worker/components/MeshSubscriptions/MeshSubscriptions\";\nimport MeshLerper from \"../../../../../worker/main/components/MeshLerper/MeshLerper\";\n\nconst PhysicsHandler: React.FC = ({children}) => {\n\n    const {physicsWorker} = useWorkersContext()\n    const buffers = useBuffers()\n    const {handleBeginCollision, handleEndCollision} = useCollisionsProviderContext()\n    const workerOnMessage = useWorkerOnMessage()\n\n    useEffect(() => {\n\n        const loop = () => {\n            if(buffers.positions.byteLength !== 0 && buffers.angles.byteLength !== 0) {\n                physicsWorker.postMessage({ type: WorkerMessageType.STEP, ...buffers }, [buffers.positions.buffer, buffers.angles.buffer])\n            }\n        }\n\n        physicsWorker.postMessage({\n            type: WorkerMessageType.INIT,\n            props: {\n            }\n        })\n\n        loop()\n\n        const unsubscribe = workerOnMessage((event: MessageEvent) => {\n\n            const type = event.data.type\n\n            switch (type) {\n                case WorkerOwnerMessageType.FRAME:\n\n                    if (event.data.bodies) {\n                        storedPhysicsData.bodies = event.data.bodies.reduce(\n                            (acc: { [key: string]: number }, id: string) => ({\n                                ...acc,\n                                [id]: (event.data as any).bodies.indexOf(id)\n                            }),\n                            {}\n                        )\n                    }\n\n                    const positions = event.data.positions as Float32Array\n                    const angles = event.data.angles as Float32Array\n                    buffers.positions = positions\n                    buffers.angles = angles\n                    requestAnimationFrame(loop);\n                    break\n                case WorkerOwnerMessageType.SYNC_BODIES:\n                    storedPhysicsData.bodies = event.data.bodies.reduce(\n                        (acc: { [key: string]: number }, id: string) => ({\n                            ...acc,\n                            [id]: (event.data as any).bodies.indexOf(id)\n                        }),\n                        {}\n                    )\n                    break\n                case WorkerOwnerMessageType.BEGIN_COLLISION:\n                    handleBeginCollision(event.data.props as any)\n                    break\n                case WorkerOwnerMessageType.END_COLLISION:\n                    handleEndCollision(event.data.props as any)\n                    break\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [workerOnMessage])\n\n    return (\n        <PhysicsProvider buffers={buffers} worker={physicsWorker}>\n            <MeshSubscriptions>\n                <PhysicsWorkerFixedUpdateProvider worker={physicsWorker}>\n                    <MeshLerper/>\n                    {children}\n                </PhysicsWorkerFixedUpdateProvider>\n            </MeshSubscriptions>\n        </PhysicsProvider>\n    )\n}\n\nconst PhysicsWrapper: React.FC = ({children}) => {\n    const {physicsWorker} = useWorkersContext()\n    return (\n        <WorkerOnMessageProvider worker={physicsWorker}>\n            <CollisionsProvider>\n                <PhysicsHandler>\n                    {children}\n                </PhysicsHandler>\n            </CollisionsProvider>\n        </WorkerOnMessageProvider>\n    )\n}\n\nexport default PhysicsWrapper;","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx",["203","204"],"/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx",[],["205","206"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx",["207"],"import React, {useEffect, useState} from \"react\"\nimport {useSubscribeToMessage} from \"../../../../../../components/Messages/context\";\nimport {\n    MessageKeys,\n    SyncComponentMessage,\n    SyncComponentMessageType,\n    SyncComponentType,\n    ValidProps\n} from \"../../../../../../workers/shared/types\";\nimport Player from \"../../../../../player/main/components/Player/Player\";\nimport {useWorkersContext} from \"../../../../../../components/Workers/context\";\nimport {WorkerMessageType} from \"../../../../../../workers/physics/types\";\n\nconst mappedComponentTypes = {\n    [SyncComponentType.PLAYER]: Player,\n}\n\nconst LogicHandler: React.FC = ({children}) => {\n\n    const {logicWorker} = useWorkersContext()\n\n    const subscribeToMessage = useSubscribeToMessage()\n\n    const [components, setComponents] = useState<{\n        [key: string]: {\n            componentType: SyncComponentType,\n            props: ValidProps,\n        },\n    }>({})\n\n    useEffect(() => {\n\n        logicWorker.postMessage({\n            type: WorkerMessageType.INIT,\n            props: {}\n        })\n\n    }, [logicWorker])\n\n    useEffect(() => {\n\n        const unsubscribe = subscribeToMessage(MessageKeys.SYNC_COMPONENT, (\n            {info, messageType, data}: SyncComponentMessage\n        ) => {\n\n            const props = data || {}\n\n            switch (messageType) {\n                case SyncComponentMessageType.MOUNT:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UPDATE:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UNMOUNT:\n                    setComponents(state => {\n                        let update = {\n                            ...state,\n                        }\n                        delete update[info.componentKey]\n                        return update\n                    })\n                    break;\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [])\n\n    return (\n        <>\n            {children}\n            {\n                Object.entries(components).map(([key, {componentType, props}]) => {\n                    const Component = mappedComponentTypes[componentType]\n                    return Component ? <Component key={key} {...props}/> : null\n                })\n            }\n        </>\n    )\n}\n\nexport default LogicHandler","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/Camera/Camera.tsx",["208","209","210","211"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx",["212","213"],"/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/hooks/useController.ts",["214"],"/Users/simonhales/WebstormProjects/action-game/src/game/meshes/components/MeshRefs/MeshRefs.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts",["215","216","217","218","219","220","221","222","223"],"/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider.tsx",["224","225"],"import React, {createContext, useCallback, useContext, useEffect, useRef, useState} from \"react\"\nimport {useWorkerOnMessage} from \"../WorkerOnMessageProvider/WorkerOnMessageProvider\";\nimport {WorkerMessageType, WorkerOwnerMessageType} from \"../../../../workers/physics/types\";\nimport {PHYSICS_UPDATE_RATE} from \"../../../../physics/config\";\nimport {useWorkersContext} from \"../../../../components/Workers/context\";\nimport {useUpdateMeshes} from \"../MeshSubscriptions/MeshSubscriptions\";\n\ntype State = {\n    onFixedUpdate: (callback: (delta: number) => void) => () => void,\n    getPhysicsStepTimeRemainingRatio: (time: number) => number,\n}\n\nconst Context = createContext(null as unknown as State)\n\nexport const useGetPhysicsStepTimeRemainingRatio = () => {\n    return useContext(Context).getPhysicsStepTimeRemainingRatio\n}\n\nexport const useFixedUpdate = (callback: (delta: number) => void) => {\n\n    const onFixedUpdate = useContext(Context).onFixedUpdate\n\n    useEffect(() => {\n\n        const unsubscribe = onFixedUpdate(callback)\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [onFixedUpdate, callback])\n\n}\n\nconst PhysicsWorkerFixedUpdateProvider: React.FC<{\n    worker: Worker | MessagePort,\n    noLerping?: boolean,\n}> = ({children, worker, noLerping = false}) => {\n\n    const lastUpdateRef = useRef(Date.now())\n    const countRef = useRef(0)\n    const callbacksRef = useRef<{\n        [key: string]: (delta: number) => void,\n    }>({})\n    const updateMeshes = useUpdateMeshes()\n\n    const getPhysicsStepTimeRemainingRatio = useCallback((previousTime: number) => {\n        const nextExpectedUpdate = lastUpdateRef.current + PHYSICS_UPDATE_RATE\n        const time = Date.now()\n        let ratio = (time - previousTime) / (nextExpectedUpdate - previousTime)\n        ratio = ratio > 1 ? 1 : ratio\n        ratio = ratio < 0 ? 0 : ratio\n        return ratio\n    }, [lastUpdateRef])\n\n    const onFixedUpdate = useCallback((callback: (delta: number) => void) => {\n\n        const key = countRef.current\n        countRef.current += 1\n\n        callbacksRef.current[key] = callback\n\n        const unsubscribe = () => {\n            delete callbacksRef.current[key]\n        }\n\n        return unsubscribe\n\n    }, [callbacksRef])\n\n    const onMessage = useWorkerOnMessage()\n\n    useEffect(() => {\n\n        const onPhysicsStep = () => {\n\n            const lastUpdate = lastUpdateRef.current\n            const now = Date.now()\n            const delta = !lastUpdate ? 1 / 60 : (now - lastUpdate) / 1000;\n            lastUpdateRef.current = now\n\n            const callbacks = callbacksRef.current\n\n            Object.values(callbacks).forEach((callback) => {\n                callback(delta)\n            })\n\n        }\n\n        const unsubscribe = onMessage((event: MessageEvent) => {\n\n            const type = event.data.type\n\n            if (type === WorkerOwnerMessageType.PHYSICS_STEP) {\n                onPhysicsStep()\n                const positions = event.data.positions as Float32Array\n                const angles = event.data.angles as Float32Array\n                if (positions && angles) {\n                    updateMeshes(positions, angles, noLerping)\n                    worker.postMessage({\n                        type: WorkerMessageType.PHYSICS_STEP_PROCESSED,\n                        positions,\n                        angles,\n                    }, [positions.buffer, angles.buffer])\n                }\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [onMessage, callbacksRef, lastUpdateRef, worker, updateMeshes, noLerping])\n\n    return (\n        <Context.Provider value={{\n            onFixedUpdate,\n            getPhysicsStepTimeRemainingRatio,\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default PhysicsWorkerFixedUpdateProvider","/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/MeshSubscriptions/MeshSubscriptions.tsx",["226"],"import React, {createContext, useCallback, useContext, useEffect, useRef, useState} from \"react\"\nimport {Object3D} from \"three\";\nimport {ValidUUID} from \"../../../../utils/ids\";\nimport {getPositionAndAngle, storedPhysicsData} from \"../../../../physics/data\";\nimport {lerp} from \"../../../../utils/numbers\";\n\n// store mesh refs\n// receive physics data\n// update mesh based upon either useFrame, or just when the data comes in.\n\ntype ContextState = {\n    lerpMeshes: (getPhysicsStepTimeRemainingRatio: (time: number) => number) => void,\n    updateMeshes: (positions: Float32Array, angles: Float32Array, immediate: boolean) => void,\n    addSubscription: (uuid: ValidUUID, object: Object3D, applyAngle: boolean) => () => void,\n}\n\nconst Context = createContext(null as unknown as ContextState)\n\nexport const useLerpMeshes = () => {\n    return useContext(Context).lerpMeshes\n}\n\nexport const useAddMeshSubscription = (uuid: ValidUUID, object: Object3D, applyAngle: boolean = true, isDynamic: boolean = true) => {\n    const addSubscription = useContext(Context).addSubscription\n\n    useEffect(() => {\n\n        if (!isDynamic) return\n\n        const unsubscribe = addSubscription(uuid, object, applyAngle)\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [uuid, object, applyAngle, isDynamic, addSubscription])\n\n}\n\nexport const useUpdateMeshes = () => {\n    return useContext(Context).updateMeshes\n}\n\nconst MeshSubscriptions: React.FC = ({children}) => {\n\n    const subscriptionsRef = useRef<{\n        [uuid: string]: {\n            uuid: ValidUUID,\n            object: Object3D,\n            applyAngle: boolean,\n            lastUpdate?: number,\n            target?: {\n                position: [number, number],\n                angle: number,\n            }\n        }\n    }>({})\n\n    const lerpMeshes = useCallback((getPhysicsStepTimeRemainingRatio: (time: number) => number) => {\n\n        Object.values(subscriptionsRef.current).forEach(({uuid, object, target, applyAngle, lastUpdate}) => {\n            if (!target) return\n            const {position, angle} = target\n            let physicsRemainingRatio = getPhysicsStepTimeRemainingRatio(lastUpdate ?? Date.now())\n            object.position.x = lerp(object.position.x, position[0], physicsRemainingRatio)\n            object.position.y = lerp(object.position.y, position[1], physicsRemainingRatio)\n            if (applyAngle) {\n                object.rotation.z = angle // todo - lerp\n            }\n            subscriptionsRef.current[uuid].lastUpdate = Date.now()\n        })\n\n    }, [subscriptionsRef])\n\n    const updateMeshes = useCallback((positions: Float32Array, angles: Float32Array, immediate: boolean) => {\n\n        Object.entries(subscriptionsRef.current).forEach(([uuid, {object, target, applyAngle}]) => {\n            // todo - store storedPhysicsData not as global elsewhere\n            const index = storedPhysicsData.bodies[uuid]\n            const update = getPositionAndAngle({positions, angles}, index)\n            if (update) {\n\n                if (immediate) {\n                    object.position.x = update.position[0]\n                    object.position.y = update.position[1]\n                    if (applyAngle) {\n                        object.rotation.x = update.angle\n                    }\n                } else if (target) {\n                    object.position.x = target.position[0]\n                    object.position.y = target.position[1]\n                    if (applyAngle) {\n                        object.rotation.x = target.angle\n                    }\n                }\n                subscriptionsRef.current[uuid].target = {\n                    position: update.position,\n                    angle: update.angle,\n                }\n            }\n        })\n\n    }, [subscriptionsRef])\n\n    const addSubscription = useCallback((uuid: ValidUUID, object: Object3D, applyAngle: boolean) => {\n\n        subscriptionsRef.current[uuid] = {\n            uuid,\n            object,\n            applyAngle,\n        }\n\n        const unsubscribe = () => {\n            delete subscriptionsRef.current[uuid]\n        }\n\n        return unsubscribe\n\n    }, [subscriptionsRef])\n\n    return (\n        <Context.Provider value={{\n            lerpMeshes,\n            updateMeshes,\n            addSubscription,\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default MeshSubscriptions","/Users/simonhales/WebstormProjects/action-game/src/game/worker/main/components/MeshLerper/MeshLerper.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/meshes/uuids.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/TouchHandler/TouchHandler.tsx",["227","228","229","230","231","232","233"],{"ruleId":"234","severity":1,"message":"235","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":36,"column":8,"nodeType":"240","endLine":36,"endColumn":10,"suggestions":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"242","replacedBy":"246"},{"ruleId":"244","replacedBy":"247"},{"ruleId":"234","severity":1,"message":"248","line":31,"column":18,"nodeType":"236","messageId":"237","endLine":31,"endColumn":23},{"ruleId":"242","replacedBy":"249"},{"ruleId":"244","replacedBy":"250"},{"ruleId":"242","replacedBy":"251"},{"ruleId":"244","replacedBy":"252"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":29,"nodeType":"236","messageId":"237","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"253","line":28,"column":8,"nodeType":"240","endLine":28,"endColumn":10,"suggestions":"254"},{"ruleId":"238","severity":1,"message":"253","line":35,"column":8,"nodeType":"240","endLine":35,"endColumn":10,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"253","line":42,"column":8,"nodeType":"240","endLine":42,"endColumn":10,"suggestions":"256"},{"ruleId":"238","severity":1,"message":"253","line":49,"column":8,"nodeType":"240","endLine":49,"endColumn":10,"suggestions":"257"},{"ruleId":"234","severity":1,"message":"258","line":8,"column":21,"nodeType":"236","messageId":"237","endLine":8,"endColumn":32},{"ruleId":"242","replacedBy":"259"},{"ruleId":"244","replacedBy":"260"},{"ruleId":"238","severity":1,"message":"261","line":82,"column":8,"nodeType":"240","endLine":82,"endColumn":25,"suggestions":"262"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"263","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":23},{"ruleId":"242","replacedBy":"264"},{"ruleId":"244","replacedBy":"265"},{"ruleId":"238","severity":1,"message":"266","line":88,"column":8,"nodeType":"240","endLine":88,"endColumn":10,"suggestions":"267"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"268","line":3,"column":34,"nodeType":"236","messageId":"237","endLine":3,"endColumn":41},{"ruleId":"234","severity":1,"message":"269","line":4,"column":9,"nodeType":"236","messageId":"237","endLine":4,"endColumn":18},{"ruleId":"238","severity":1,"message":"270","line":17,"column":8,"nodeType":"240","endLine":17,"endColumn":10,"suggestions":"271"},{"ruleId":"238","severity":1,"message":"272","line":22,"column":8,"nodeType":"240","endLine":22,"endColumn":10,"suggestions":"273"},{"ruleId":"238","severity":1,"message":"272","line":30,"column":8,"nodeType":"240","endLine":30,"endColumn":10,"suggestions":"274"},{"ruleId":"238","severity":1,"message":"275","line":34,"column":8,"nodeType":"240","endLine":34,"endColumn":13,"suggestions":"276"},{"ruleId":"234","severity":1,"message":"277","line":1,"column":9,"nodeType":"236","messageId":"237","endLine":1,"endColumn":18},{"ruleId":"238","severity":1,"message":"278","line":44,"column":8,"nodeType":"240","endLine":44,"endColumn":10,"suggestions":"279"},{"ruleId":"238","severity":1,"message":"280","line":71,"column":8,"nodeType":"240","endLine":71,"endColumn":99,"suggestions":"281"},{"ruleId":"238","severity":1,"message":"282","line":110,"column":8,"nodeType":"240","endLine":110,"endColumn":20,"suggestions":"283"},{"ruleId":"238","severity":1,"message":"284","line":134,"column":8,"nodeType":"240","endLine":134,"endColumn":30,"suggestions":"285"},{"ruleId":"238","severity":1,"message":"284","line":143,"column":8,"nodeType":"240","endLine":143,"endColumn":28,"suggestions":"286"},{"ruleId":"234","severity":1,"message":"287","line":169,"column":12,"nodeType":"236","messageId":"237","endLine":169,"endColumn":21},{"ruleId":"238","severity":1,"message":"288","line":196,"column":8,"nodeType":"240","endLine":196,"endColumn":10,"suggestions":"289"},{"ruleId":"238","severity":1,"message":"288","line":252,"column":8,"nodeType":"240","endLine":252,"endColumn":10,"suggestions":"290"},{"ruleId":"234","severity":1,"message":"291","line":1,"column":75,"nodeType":"236","messageId":"237","endLine":1,"endColumn":83},{"ruleId":"234","severity":1,"message":"292","line":5,"column":9,"nodeType":"236","messageId":"237","endLine":5,"endColumn":26},{"ruleId":"234","severity":1,"message":"291","line":1,"column":75,"nodeType":"236","messageId":"237","endLine":1,"endColumn":83},{"ruleId":"234","severity":1,"message":"293","line":1,"column":40,"nodeType":"236","messageId":"237","endLine":1,"endColumn":47},{"ruleId":"234","severity":1,"message":"294","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":22},{"ruleId":"234","severity":1,"message":"295","line":4,"column":9,"nodeType":"236","messageId":"237","endLine":4,"endColumn":13},{"ruleId":"234","severity":1,"message":"296","line":5,"column":9,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"297","line":5,"column":16,"nodeType":"236","messageId":"237","endLine":5,"endColumn":24},{"ruleId":"238","severity":1,"message":"298","line":171,"column":8,"nodeType":"240","endLine":171,"endColumn":41,"suggestions":"299"},{"ruleId":"238","severity":1,"message":"300","line":232,"column":8,"nodeType":"240","endLine":232,"endColumn":20,"suggestions":"301"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'handleMessage'. Either include it or remove the dependency array.","ArrayExpression",["302"],"no-native-reassign",["303"],"no-negated-in-lhs",["304"],["303"],["304"],"'props' is assigned a value but never used.",["303"],["304"],["303"],["304"],"React Hook useCallback has a missing dependency: 'worker'. Either include it or remove the dependency array.",["305"],["306"],["307"],["308"],"'useBodySync' is defined but never used.",["303"],["304"],"React Hook useEffect has missing dependencies: 'buffers', 'handleBeginCollision', 'handleEndCollision', and 'physicsWorker'. Either include them or remove the dependency array.",["309"],"'OrbitControls' is defined but never used.",["303"],["304"],"React Hook useEffect has a missing dependency: 'subscribeToMessage'. Either include it or remove the dependency array.",["310"],"'Matrix4' is defined but never used.","'useTweaks' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'setDefaultCamera'. Either include it or remove the dependency array.",["311"],"React Hook useCallback has missing dependencies: 'collisionEndedEvents' and 'collisionStartedEvents'. Either include them or remove the dependency array.",["312"],["313"],"React Hook useCallback has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array.",["314"],"'MathUtils' is defined but never used.","React Hook useEffect has missing dependencies: 'applyAngle', 'buffers', 'isDynamic', 'ref', and 'uuid'. Either include them or remove the dependency array.",["315"],"React Hook useCallback has a missing dependency: 'buffers'. Either include it or remove the dependency array.",["316"],"React Hook useMemo has missing dependencies: 'workerSetBody' and 'workerUpdateBody'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'addCollisionHandler' and 'removeCollisionHandler'. Either include them or remove the dependency array.",["318"],["319"],"'isDynamic' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'cacheKey', 'listenForCollisions', 'propsFn', 'ref', 'uuid', 'workerAddBody', and 'workerRemoveBody'. Either include them or remove the dependency array. If 'propsFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],["321"],"'useState' is defined but never used.","'useWorkersContext' is defined but never used.","'useMemo' is defined but never used.","'useWindowSize' is defined but never used.","'lerp' is defined but never used.","'proxy' is defined but never used.","'useProxy' is defined but never used.","React Hook useCallback has unnecessary dependencies: 'setStartingPoint' and 'startingPoint'. Either exclude them or remove the dependency array.",["322"],"React Hook useCallback has a missing dependency: 'localState.mouseActive'. Either include it or remove the dependency array.",["323"],{"desc":"324","fix":"325"},"no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"326","fix":"329"},{"desc":"326","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"352","fix":"354"},{"desc":"340","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [handleMessage]",{"range":"358","text":"359"},"Update the dependencies array to be: [worker]",{"range":"360","text":"361"},{"range":"362","text":"361"},{"range":"363","text":"361"},{"range":"364","text":"361"},"Update the dependencies array to be: [buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",{"range":"365","text":"366"},"Update the dependencies array to be: [subscribeToMessage]",{"range":"367","text":"368"},"Update the dependencies array to be: [setDefaultCamera]",{"range":"369","text":"370"},"Update the dependencies array to be: [collisionEndedEvents, collisionStartedEvents]",{"range":"371","text":"372"},{"range":"373","text":"372"},"Update the dependencies array to be: []",{"range":"374","text":"375"},"Update the dependencies array to be: [applyAngle, buffers, isDynamic, ref, uuid]",{"range":"376","text":"377"},"Update the dependencies array to be: [isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",{"range":"378","text":"379"},"Update the dependencies array to be: [passedUuid, workerSetBody, workerUpdateBody]",{"range":"380","text":"381"},"Update the dependencies array to be: [uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",{"range":"382","text":"383"},"Update the dependencies array to be: [uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",{"range":"384","text":"385"},"Update the dependencies array to be: [cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",{"range":"386","text":"387"},{"range":"388","text":"387"},{"range":"389","text":"375"},"Update the dependencies array to be: [handleMove, localState.mouseActive]",{"range":"390","text":"391"},[1352,1354],"[handleMessage]",[999,1001],"[worker]",[1189,1191],[1371,1373],[1562,1564],[3559,3576],"[buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",[2648,2650],"[subscribeToMessage]",[696,698],"[setDefaultCamera]",[859,861],"[collisionEndedEvents, collisionStartedEvents]",[1103,1105],[1073,1078],"[]",[1975,1977],"[applyAngle, buffers, isDynamic, ref, uuid]",[3139,3230],"[isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",[4539,4551],"[passedUuid, workerSetBody, workerUpdateBody]",[5267,5289],"[uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",[5511,5531],"[uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",[6826,6828],"[cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",[8182,8184],[4563,4596],[6996,7008],"[handleMove, localState.mouseActive]"]