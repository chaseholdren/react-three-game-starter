[{"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx":"1","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts":"2","/Users/simonhales/WebstormProjects/action-game/src/index.tsx":"3","/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts":"4","/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts":"5","/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx":"6","/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts":"7","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx":"8","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx":"9","/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts":"10","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx":"11","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts":"12","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx":"13","/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts":"14","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx":"15","/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx":"16","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx":"17","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx":"18","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts":"19","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx":"20","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx":"21","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx":"22","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts":"23","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts":"24","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts":"25","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx":"26","/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts":"27","/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts":"28","/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts":"29","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts":"30","/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts":"31","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts":"32","/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts":"33","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/TouchHandler/TouchHandler.tsx":"34","/Users/simonhales/WebstormProjects/action-game/src/physics/shared.ts":"35","/Users/simonhales/WebstormProjects/action-game/src/game/elements/wall/components/Wall/Wall.tsx":"36","/Users/simonhales/WebstormProjects/action-game/src/game/player/components/Player/hooks/useController.ts":"37","/Users/simonhales/WebstormProjects/action-game/src/game/elements/camera/components/CameraProvider/CameraProvider.tsx":"38","/Users/simonhales/WebstormProjects/action-game/src/game/elements/camera/components/Camera/Camera.tsx":"39"},{"size":1618,"mtime":1609642807005,"results":"40","hashOfConfig":"41"},{"size":5230,"mtime":1609860002260,"results":"42","hashOfConfig":"41"},{"size":515,"mtime":1609486938761,"results":"43","hashOfConfig":"41"},{"size":969,"mtime":1609642790500,"results":"44","hashOfConfig":"41"},{"size":327,"mtime":1609642026794,"results":"45","hashOfConfig":"41"},{"size":169,"mtime":1609558795178,"results":"46","hashOfConfig":"41"},{"size":1473,"mtime":1609821522327,"results":"47","hashOfConfig":"41"},{"size":1882,"mtime":1609795704604,"results":"48","hashOfConfig":"41"},{"size":1496,"mtime":1609642813396,"results":"49","hashOfConfig":"41"},{"size":425,"mtime":1609483309640,"results":"50","hashOfConfig":"41"},{"size":4431,"mtime":1609980141687,"results":"51","hashOfConfig":"41"},{"size":670,"mtime":1609507892885,"results":"52","hashOfConfig":"41"},{"size":2087,"mtime":1609983775809,"results":"53","hashOfConfig":"41"},{"size":568,"mtime":1609559863619,"results":"54","hashOfConfig":"41"},{"size":610,"mtime":1609982332414,"results":"55","hashOfConfig":"41"},{"size":330,"mtime":1609749827670,"results":"56","hashOfConfig":"41"},{"size":172,"mtime":1609646322248,"results":"57","hashOfConfig":"41"},{"size":3033,"mtime":1609642152497,"results":"58","hashOfConfig":"41"},{"size":328,"mtime":1609940426327,"results":"59","hashOfConfig":"41"},{"size":448,"mtime":1609749739518,"results":"60","hashOfConfig":"41"},{"size":401,"mtime":1609751892777,"results":"61","hashOfConfig":"41"},{"size":1602,"mtime":1609761534728,"results":"62","hashOfConfig":"41"},{"size":556,"mtime":1609555207685,"results":"63","hashOfConfig":"41"},{"size":299,"mtime":1609858606200,"results":"64","hashOfConfig":"41"},{"size":774,"mtime":1609509393977,"results":"65","hashOfConfig":"41"},{"size":1947,"mtime":1609509491258,"results":"66","hashOfConfig":"41"},{"size":8320,"mtime":1609940426325,"results":"67","hashOfConfig":"41"},{"size":602,"mtime":1608030846328,"results":"68","hashOfConfig":"41"},{"size":44,"mtime":1609889601860,"results":"69","hashOfConfig":"41"},{"size":88,"mtime":1609752231122,"results":"70","hashOfConfig":"41"},{"size":725,"mtime":1609940426327,"results":"71","hashOfConfig":"41"},{"size":700,"mtime":1609753545982,"results":"72","hashOfConfig":"41"},{"size":76,"mtime":1608030846328,"results":"73","hashOfConfig":"41"},{"size":8205,"mtime":1609978398720,"results":"74","hashOfConfig":"41"},{"size":683,"mtime":1608127599578,"results":"75","hashOfConfig":"41"},{"size":684,"mtime":1609981093164,"results":"76","hashOfConfig":"41"},{"size":1102,"mtime":1609981680225,"results":"77","hashOfConfig":"41"},{"size":1226,"mtime":1609983545826,"results":"78","hashOfConfig":"41"},{"size":1388,"mtime":1609983670251,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1eylt58",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"107"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx",["170","171"],"import React, {useEffect, useLayoutEffect, useState} from \"react\"\nimport { WorkersContext } from \"./context\"\nimport {useMessagesContext} from \"../Messages/context\";\nimport {WorkerOwnerMessageType} from \"../../workers/physics/types\";\nimport {MessageData} from \"../../workers/shared/types\";\n\nconst Workers: React.FC = ({children}) => {\n    const [physicsWorker, setPhysicsWorker] = useState<Worker | null>(null)\n    const [logicWorker, setLogicWorker] = useState<Worker | null>(null)\n\n    const {\n        handleMessage,\n    } = useMessagesContext()\n\n    useLayoutEffect(() => {\n        const physWorker = new Worker('../../workers/physics', { name: 'physicsWorker', type: 'module' })\n        const logiWorker = new Worker('../../workers/logic', { name: 'logicWorker', type: 'module' })\n        setPhysicsWorker(physWorker)\n        setLogicWorker(logiWorker)\n        const channel = new MessageChannel()\n        physWorker.postMessage({command: \"connect\"}, [channel.port1])\n        logiWorker.postMessage({command: \"connect\"}, [channel.port2])\n\n        logiWorker.onmessage= (event: MessageEvent) => {\n\n            const type = event.data.type\n\n            switch (type) {\n                case WorkerOwnerMessageType.MESSAGE:\n                    handleMessage(event.data.message as MessageData)\n                    break;\n            }\n\n        }\n\n    }, [])\n\n    if (!physicsWorker || !logicWorker) return null\n\n    return (\n        <WorkersContext.Provider value={{\n            physicsWorker,\n            logicWorker,\n        }}>\n            {children}\n        </WorkersContext.Provider>\n    )\n}\n\nexport default Workers",["172","173"],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts",[],["174","175"],"/Users/simonhales/WebstormProjects/action-game/src/index.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts",["176"],"/* eslint-disable no-restricted-globals */\n\n// because of some weird react/dev/webpack/something quirk\nimport {WorkerMessageType} from \"../physics/types\";\n\n(self as any).$RefreshReg$ = () => {};\n(self as any).$RefreshSig$ = () => () => {};\n\nconst setWorker = require(\"./react\").setWorker\nconst init = require(\"./react\").init\n\nlet physicsWorkerPort: MessagePort\n\nconst selfWorker = self as unknown as Worker\n\nselfWorker.onmessage = (event: MessageEvent) => {\n\n    switch( event.data.command )\n    {\n\n        case \"connect\":\n            physicsWorkerPort = event.ports[0];\n            setWorker(physicsWorkerPort)\n            return\n\n        case \"forward\":\n            physicsWorkerPort.postMessage( event.data.message );\n            return\n    }\n\n    const {type, props = {}} = event.data as {\n        type: WorkerMessageType,\n        props: any,\n    };\n\n    switch (type) {\n        case WorkerMessageType.INIT:\n            init()\n            break;\n    }\n\n}\n\nexport {}",["177","178"],"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts",[],["179","180"],"/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx",[],["181","182"],"/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx",["183","184","185","186","187"],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts",[],["188","189"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx",["190"],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx",["191","192"],"/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx",["193"],"import React, {useEffect, useState} from \"react\"\nimport {useSubscribeToMessage} from \"../../../../../../components/Messages/context\";\nimport {\n    MessageKeys,\n    SyncComponentMessage,\n    SyncComponentMessageType,\n    SyncComponentType,\n    ValidProps\n} from \"../../../../../../workers/shared/types\";\nimport Player from \"../../../../../player/main/components/Player/Player\";\nimport {useWorkersContext} from \"../../../../../../components/Workers/context\";\nimport {WorkerMessageType} from \"../../../../../../workers/physics/types\";\n\nconst mappedComponentTypes = {\n    [SyncComponentType.PLAYER]: Player,\n}\n\nconst LogicHandler: React.FC = ({children}) => {\n\n    const {logicWorker} = useWorkersContext()\n\n    const subscribeToMessage = useSubscribeToMessage()\n\n    const [components, setComponents] = useState<{\n        [key: string]: {\n            componentType: SyncComponentType,\n            props: ValidProps,\n        },\n    }>({})\n\n    useEffect(() => {\n\n        logicWorker.postMessage({\n            type: WorkerMessageType.INIT,\n            props: {}\n        })\n\n    }, [logicWorker])\n\n    useEffect(() => {\n\n        const unsubscribe = subscribeToMessage(MessageKeys.SYNC_COMPONENT, (\n            {info, messageType, data}: SyncComponentMessage\n        ) => {\n\n            const props = data || {}\n\n            switch (messageType) {\n                case SyncComponentMessageType.MOUNT:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UPDATE:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UNMOUNT:\n                    setComponents(state => {\n                        let update = {\n                            ...state,\n                        }\n                        delete update[info.componentKey]\n                        return update\n                    })\n                    break;\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [])\n\n    return (\n        <>\n            {children}\n            {\n                Object.entries(components).map(([key, {componentType, props}]) => {\n                    const Component = mappedComponentTypes[componentType]\n                    return Component ? <Component key={key} {...props}/> : null\n                })\n            }\n        </>\n    )\n}\n\nexport default LogicHandler","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx",[],["194","195"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx",["196","197"],"import React, {useCallback, useState} from \"react\"\nimport {CollisionsProviderContext} from \"./context\";\nimport {ValidUUID} from \"../../../utils/ids\";\nimport {CollisionEventProps} from \"../../data\";\n\nconst CollisionsProvider: React.FC = ({children}) => {\n\n    const [collisionStartedEvents] = useState<{\n        [key: string]: (data: any, fixtureIndex: number, isSensor: boolean) => void,\n    }>({})\n\n    const [collisionEndedEvents] = useState<{\n        [key: string]: (data: any, fixtureIndex: number, isSensor: boolean) => void,\n    }>({})\n\n    const addCollisionHandler = useCallback((started: boolean, uuid: ValidUUID, callback: (data: any, fixtureIndex: number, isSensor: boolean) => void) => {\n        if (started) {\n            collisionStartedEvents[uuid] = callback\n        } else {\n            collisionEndedEvents[uuid] = callback\n        }\n    }, [])\n\n    const removeCollisionHandler = useCallback((started: boolean, uuid: ValidUUID) => {\n        if (started) {\n            delete collisionStartedEvents[uuid]\n        } else {\n            delete collisionEndedEvents[uuid]\n        }\n    }, [])\n\n    const handleBeginCollision = useCallback((data: CollisionEventProps) => {\n        if (collisionStartedEvents[data.uuid]) {\n            collisionStartedEvents[data.uuid](data.data, data.fixtureIndex, data.isSensor)\n        }\n    }, [collisionStartedEvents])\n\n    const handleEndCollision = useCallback((data: CollisionEventProps) => {\n        if (collisionEndedEvents[data.uuid]) {\n            collisionEndedEvents[data.uuid](data.data, data.fixtureIndex, data.isSensor)\n        }\n    }, [collisionEndedEvents])\n\n    return (\n        <CollisionsProviderContext.Provider value={{\n            addCollisionHandler,\n            removeCollisionHandler,\n            handleBeginCollision,\n            handleEndCollision\n        }}>\n            {children}\n        </CollisionsProviderContext.Provider>\n    )\n}\n\nexport default CollisionsProvider","/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts",["198","199","200","201","202","203","204","205","206"],"import {MathUtils, Object3D} from \"three\";\nimport {MutableRefObject, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from \"react\";\nimport {Vec2} from \"planck-js\";\nimport {useFrame} from \"react-three-fiber\";\nimport {AddBodyDef, BodyType, UpdateBodyData} from \"../bodies\";\nimport {ValidUUID} from \"../../utils/ids\";\nimport {usePhysicsProvider} from \"../components/PhysicsProvider/context\";\nimport {applyPositionAngle, getPositionAndAngle, storedPhysicsData} from \"../data\";\nimport {useCollisionsProviderContext} from \"../components/CollisionsProvider/context\";\nimport {PhysicsCacheKeys} from \"../cache\";\nimport {useGetPhysicsStepTimeRemainingRatio} from \"../../game/worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider\";\nimport {lerp} from \"../../utils/numbers\";\nimport {useAddMeshSubscription} from \"../../game/worker/components/MeshSubscriptions/MeshSubscriptions\";\n\nexport type BodyApi = {\n    applyForceToCenter: (vec: Vec2, uuid?: ValidUUID) => void,\n    applyLinearImpulse: (vec: Vec2, pos: Vec2, uuid?: ValidUUID) => void,\n    setPosition: (vec: Vec2, uuid?: ValidUUID) => void,\n    setLinearVelocity: (vec: Vec2, uuid?: ValidUUID) => void,\n    setAngle: (angle: number, uuid?: ValidUUID) => void,\n    updateBody: (data: UpdateBodyData, uuid?: ValidUUID) => void,\n}\n\nexport const useIntervalBodySync = (ref: MutableRefObject<Object3D>, uuid: ValidUUID, isDynamic: boolean, applyAngle: boolean = true) => {\n\n    const {buffers} = usePhysicsProvider()\n\n    useEffect(() => {\n\n        let interval = setInterval(() => {\n            if (!isDynamic) {\n                return\n            }\n            if (ref.current && buffers.positions.length && buffers.angles.length) {\n                const index = storedPhysicsData.bodies[uuid]\n                applyPositionAngle(buffers, ref.current, index, applyAngle)\n            }\n        }, 1000 / 60)\n\n        return () => {\n            clearInterval(interval)\n        }\n\n    }, [])\n\n}\n\nexport const useBodySync = (ref: MutableRefObject<Object3D>, uuid: ValidUUID, isDynamic: boolean, applyAngle: boolean = true) => {\n\n    const previousUpdateTimeRef = useRef(Date.now())\n    const {buffers} = usePhysicsProvider()\n    const getPhysicsStepTimeRemainingRatio = useGetPhysicsStepTimeRemainingRatio()\n\n    const onFrame = useCallback(() => {\n        if (!isDynamic) {\n            return\n        }\n        if (ref.current && buffers.positions.length && buffers.angles.length) {\n            const index = storedPhysicsData.bodies[uuid]\n            const update = getPositionAndAngle(buffers, index)\n            const body = ref.current\n            if (update) {\n                const {position, angle} = update\n                let physicsRemainingRatio = getPhysicsStepTimeRemainingRatio(previousUpdateTimeRef.current)\n                body.position.x = lerp(body.position.x, position[0], physicsRemainingRatio)\n                body.position.y = lerp(body.position.y, position[1], physicsRemainingRatio)\n                body.rotation.z = angle // todo - lerp\n                previousUpdateTimeRef.current = Date.now()\n            }\n        }\n    }, [isDynamic, ref, uuid, applyAngle, getPhysicsStepTimeRemainingRatio, previousUpdateTimeRef])\n\n    useFrame(onFrame)\n\n}\n\nexport const useMultipleBodyApi = () => {\n\n}\n\nexport const useBodyApi = (passedUuid: ValidUUID): BodyApi => {\n\n    const {\n        workerSetBody,\n        workerUpdateBody\n    } = usePhysicsProvider()\n\n    const api = useMemo<BodyApi>(() => {\n\n        return  {\n            applyForceToCenter: (vec, uuid) => {\n                workerSetBody({uuid: uuid ?? passedUuid, method: 'applyForceToCenter', methodParams: [vec, true]})\n            },\n            applyLinearImpulse: (vec, pos, uuid) => {\n                workerSetBody({uuid: uuid ?? passedUuid, method: 'applyLinearImpulse', methodParams: [vec, pos, true]})\n            },\n            setPosition: (vec, uuid) => {\n                workerSetBody({uuid: uuid ?? passedUuid, method: 'setPosition', methodParams: [vec]})\n            },\n            setLinearVelocity: (vec, uuid) => {\n                workerSetBody({uuid: uuid ?? passedUuid, method: 'setLinearVelocity', methodParams: [vec]})\n            },\n            updateBody: (data: UpdateBodyData, uuid) => {\n                workerUpdateBody({uuid: uuid ?? passedUuid, data})\n            },\n            setAngle: (angle: number, uuid) => {\n                workerSetBody({uuid: uuid ?? passedUuid, method: 'setAngle', methodParams: [angle]})\n            }\n        }\n    }, [passedUuid])\n\n    return api\n\n}\n\nexport const useCollisionEvents = (\n                                    uuid: ValidUUID,\n                                    onCollideStart?: (data: any, fixtureIndex: number, isSensor: boolean) => void,\n                                    onCollideEnd?: (data: any, fixtureIndex: number, isSensor: boolean) => void,\n                                    ) => {\n\n    const {\n        addCollisionHandler,\n        removeCollisionHandler\n    } = useCollisionsProviderContext()\n\n    useEffect(() => {\n        if (onCollideStart) {\n            addCollisionHandler(true, uuid, onCollideStart)\n            return () => {\n                removeCollisionHandler(true, uuid)\n            }\n        }\n    }, [uuid, onCollideStart])\n\n    useEffect(() => {\n        if (onCollideEnd) {\n            addCollisionHandler(false, uuid, onCollideEnd)\n            return () => {\n                removeCollisionHandler(false, uuid)\n            }\n        }\n    }, [uuid, onCollideEnd])\n\n}\n\nexport const useBodyRaw = (propsFn: () => AddBodyDef, {\n    applyAngle = false,\n    cacheKey,\n    uuid: passedUUID,\n    fwdRef,\n    listenForCollisions = false,\n}: {\n    listenForCollisions?: boolean,\n    applyAngle?: boolean,\n    cacheKey?: PhysicsCacheKeys,\n    uuid?: string | number,\n    fwdRef?: MutableRefObject<Object3D>,\n}): [any, BodyApi, string | number] => {\n    const localRef = useRef<Object3D>((null as unknown) as Object3D)\n    const ref = fwdRef ? fwdRef : localRef\n    const [uuid] = useState(() => {\n        if (passedUUID) return passedUUID\n        if (!ref.current) {\n            ref.current = new Object3D()\n        }\n        return ref.current.uuid\n    })\n    const [isDynamic] = useState(() => {\n        const props = propsFn()\n        return props.type !== BodyType.static\n    })\n    const {\n        workerAddBody,\n        workerRemoveBody,\n    } = usePhysicsProvider()\n\n    useLayoutEffect(() => {\n\n        const props = propsFn()\n\n        ref.current.position.x = props.position?.x || 0\n        ref.current.position.y = props.position?.y || 0\n\n        workerAddBody({\n            uuid,\n            listenForCollisions,\n            cacheKey,\n            ...props,\n        })\n\n        return () => {\n            workerRemoveBody({uuid, cacheKey})\n        }\n\n    }, [])\n\n    const api = useBodyApi(uuid)\n\n    return [ref, api, uuid]\n}\n\nexport const useBody = (propsFn: () => AddBodyDef, {\n    applyAngle = false,\n    cacheKey,\n    uuid: passedUUID,\n    fwdRef,\n    listenForCollisions = false,\n}: {\n    listenForCollisions?: boolean,\n    applyAngle?: boolean,\n    cacheKey?: PhysicsCacheKeys,\n    uuid?: string | number,\n    fwdRef?: MutableRefObject<Object3D>,\n}): [any, BodyApi, string | number] => {\n    const localRef = useRef<Object3D>((null as unknown) as Object3D)\n    const ref = fwdRef ? fwdRef : localRef\n    const [uuid] = useState(() => {\n        if (passedUUID) return passedUUID\n        if (!ref.current) {\n            ref.current = new Object3D()\n        }\n        return ref.current.uuid\n    })\n    const [isDynamic] = useState(() => {\n        const props = propsFn()\n        return props.type !== BodyType.static\n    })\n    const {\n        workerAddBody,\n        workerRemoveBody,\n    } = usePhysicsProvider()\n\n    useLayoutEffect(() => {\n\n        const props = propsFn()\n\n        ref.current.position.x = props.position?.x || 0\n        ref.current.position.y = props.position?.y || 0\n\n        workerAddBody({\n            uuid,\n            listenForCollisions,\n            cacheKey,\n            ...props,\n        })\n\n        return () => {\n            workerRemoveBody({uuid, cacheKey})\n        }\n\n    }, [])\n\n    useAddMeshSubscription(uuid, ref.current, isDynamic, applyAngle)\n\n    const api = useBodyApi(uuid)\n\n    return [ref, api, uuid]\n}","/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/TouchHandler/TouchHandler.tsx",["207","208","209","210","211","212","213"],"/Users/simonhales/WebstormProjects/action-game/src/physics/shared.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/elements/wall/components/Wall/Wall.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/player/components/Player/hooks/useController.ts",["214"],"/Users/simonhales/WebstormProjects/action-game/src/game/elements/camera/components/CameraProvider/CameraProvider.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/elements/camera/components/Camera/Camera.tsx",["215","216","217","218"],{"ruleId":"219","severity":1,"message":"220","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":36,"column":8,"nodeType":"225","endLine":36,"endColumn":10,"suggestions":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"227","replacedBy":"231"},{"ruleId":"229","replacedBy":"232"},{"ruleId":"219","severity":1,"message":"233","line":31,"column":18,"nodeType":"221","messageId":"222","endLine":31,"endColumn":23},{"ruleId":"227","replacedBy":"234"},{"ruleId":"229","replacedBy":"235"},{"ruleId":"227","replacedBy":"236"},{"ruleId":"229","replacedBy":"237"},{"ruleId":"227","replacedBy":"238"},{"ruleId":"229","replacedBy":"239"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":29,"nodeType":"221","messageId":"222","endLine":1,"endColumn":38},{"ruleId":"223","severity":1,"message":"240","line":28,"column":8,"nodeType":"225","endLine":28,"endColumn":10,"suggestions":"241"},{"ruleId":"223","severity":1,"message":"240","line":35,"column":8,"nodeType":"225","endLine":35,"endColumn":10,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"240","line":42,"column":8,"nodeType":"225","endLine":42,"endColumn":10,"suggestions":"243"},{"ruleId":"223","severity":1,"message":"240","line":49,"column":8,"nodeType":"225","endLine":49,"endColumn":10,"suggestions":"244"},{"ruleId":"227","replacedBy":"245"},{"ruleId":"229","replacedBy":"246"},{"ruleId":"223","severity":1,"message":"247","line":82,"column":8,"nodeType":"225","endLine":82,"endColumn":25,"suggestions":"248"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"249","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":23},{"ruleId":"223","severity":1,"message":"250","line":88,"column":8,"nodeType":"225","endLine":88,"endColumn":10,"suggestions":"251"},{"ruleId":"227","replacedBy":"252"},{"ruleId":"229","replacedBy":"253"},{"ruleId":"223","severity":1,"message":"254","line":22,"column":8,"nodeType":"225","endLine":22,"endColumn":10,"suggestions":"255"},{"ruleId":"223","severity":1,"message":"254","line":30,"column":8,"nodeType":"225","endLine":30,"endColumn":10,"suggestions":"256"},{"ruleId":"219","severity":1,"message":"257","line":1,"column":9,"nodeType":"221","messageId":"222","endLine":1,"endColumn":18},{"ruleId":"223","severity":1,"message":"258","line":44,"column":8,"nodeType":"225","endLine":44,"endColumn":10,"suggestions":"259"},{"ruleId":"223","severity":1,"message":"260","line":71,"column":8,"nodeType":"225","endLine":71,"endColumn":99,"suggestions":"261"},{"ruleId":"223","severity":1,"message":"262","line":110,"column":8,"nodeType":"225","endLine":110,"endColumn":20,"suggestions":"263"},{"ruleId":"223","severity":1,"message":"264","line":134,"column":8,"nodeType":"225","endLine":134,"endColumn":30,"suggestions":"265"},{"ruleId":"223","severity":1,"message":"264","line":143,"column":8,"nodeType":"225","endLine":143,"endColumn":28,"suggestions":"266"},{"ruleId":"219","severity":1,"message":"267","line":169,"column":12,"nodeType":"221","messageId":"222","endLine":169,"endColumn":21},{"ruleId":"223","severity":1,"message":"268","line":196,"column":8,"nodeType":"225","endLine":196,"endColumn":10,"suggestions":"269"},{"ruleId":"223","severity":1,"message":"268","line":252,"column":8,"nodeType":"225","endLine":252,"endColumn":10,"suggestions":"270"},{"ruleId":"219","severity":1,"message":"271","line":1,"column":40,"nodeType":"221","messageId":"222","endLine":1,"endColumn":47},{"ruleId":"219","severity":1,"message":"272","line":3,"column":9,"nodeType":"221","messageId":"222","endLine":3,"endColumn":22},{"ruleId":"219","severity":1,"message":"273","line":4,"column":9,"nodeType":"221","messageId":"222","endLine":4,"endColumn":13},{"ruleId":"219","severity":1,"message":"274","line":5,"column":9,"nodeType":"221","messageId":"222","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"275","line":5,"column":16,"nodeType":"221","messageId":"222","endLine":5,"endColumn":24},{"ruleId":"223","severity":1,"message":"276","line":172,"column":8,"nodeType":"225","endLine":172,"endColumn":41,"suggestions":"277"},{"ruleId":"223","severity":1,"message":"278","line":231,"column":8,"nodeType":"225","endLine":231,"endColumn":20,"suggestions":"279"},{"ruleId":"223","severity":1,"message":"280","line":15,"column":8,"nodeType":"225","endLine":15,"endColumn":13,"suggestions":"281"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"282","line":3,"column":34,"nodeType":"221","messageId":"222","endLine":3,"endColumn":41},{"ruleId":"219","severity":1,"message":"283","line":4,"column":9,"nodeType":"221","messageId":"222","endLine":4,"endColumn":18},{"ruleId":"223","severity":1,"message":"284","line":20,"column":8,"nodeType":"225","endLine":20,"endColumn":10,"suggestions":"285"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'handleMessage'. Either include it or remove the dependency array.","ArrayExpression",["286"],"no-native-reassign",["287"],"no-negated-in-lhs",["288"],["287"],["288"],"'props' is assigned a value but never used.",["287"],["288"],["287"],["288"],["287"],["288"],"React Hook useCallback has a missing dependency: 'worker'. Either include it or remove the dependency array.",["289"],["290"],["291"],["292"],["287"],["288"],"React Hook useEffect has missing dependencies: 'buffers', 'handleBeginCollision', 'handleEndCollision', and 'physicsWorker'. Either include them or remove the dependency array.",["293"],"'OrbitControls' is defined but never used.","React Hook useEffect has a missing dependency: 'subscribeToMessage'. Either include it or remove the dependency array.",["294"],["287"],["288"],"React Hook useCallback has missing dependencies: 'collisionEndedEvents' and 'collisionStartedEvents'. Either include them or remove the dependency array.",["295"],["296"],"'MathUtils' is defined but never used.","React Hook useEffect has missing dependencies: 'applyAngle', 'buffers', 'isDynamic', 'ref', and 'uuid'. Either include them or remove the dependency array.",["297"],"React Hook useCallback has a missing dependency: 'buffers'. Either include it or remove the dependency array.",["298"],"React Hook useMemo has missing dependencies: 'workerSetBody' and 'workerUpdateBody'. Either include them or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'addCollisionHandler' and 'removeCollisionHandler'. Either include them or remove the dependency array.",["300"],["301"],"'isDynamic' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'cacheKey', 'listenForCollisions', 'propsFn', 'ref', 'uuid', 'workerAddBody', and 'workerRemoveBody'. Either include them or remove the dependency array. If 'propsFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["302"],["303"],"'useMemo' is defined but never used.","'useWindowSize' is defined but never used.","'lerp' is defined but never used.","'proxy' is defined but never used.","'useProxy' is defined but never used.","React Hook useCallback has unnecessary dependencies: 'setStartingPoint' and 'startingPoint'. Either exclude them or remove the dependency array.",["304"],"React Hook useCallback has a missing dependency: 'localState.mouseActive'. Either include it or remove the dependency array.",["305"],"React Hook useCallback has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array.",["306"],"'Matrix4' is defined but never used.","'useTweaks' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'setDefaultCamera'. Either include it or remove the dependency array.",["307"],{"desc":"308","fix":"309"},"no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"310","fix":"312"},{"desc":"310","fix":"313"},{"desc":"310","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"319","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"332","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"335","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [handleMessage]",{"range":"342","text":"343"},"Update the dependencies array to be: [worker]",{"range":"344","text":"345"},{"range":"346","text":"345"},{"range":"347","text":"345"},{"range":"348","text":"345"},"Update the dependencies array to be: [buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",{"range":"349","text":"350"},"Update the dependencies array to be: [subscribeToMessage]",{"range":"351","text":"352"},"Update the dependencies array to be: [collisionEndedEvents, collisionStartedEvents]",{"range":"353","text":"354"},{"range":"355","text":"354"},"Update the dependencies array to be: [applyAngle, buffers, isDynamic, ref, uuid]",{"range":"356","text":"357"},"Update the dependencies array to be: [isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",{"range":"358","text":"359"},"Update the dependencies array to be: [passedUuid, workerSetBody, workerUpdateBody]",{"range":"360","text":"361"},"Update the dependencies array to be: [uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",{"range":"362","text":"363"},"Update the dependencies array to be: [uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",{"range":"364","text":"365"},"Update the dependencies array to be: [cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",{"range":"366","text":"367"},{"range":"368","text":"367"},"Update the dependencies array to be: []",{"range":"369","text":"370"},"Update the dependencies array to be: [handleMove, localState.mouseActive]",{"range":"371","text":"372"},{"range":"373","text":"370"},"Update the dependencies array to be: [setDefaultCamera]",{"range":"374","text":"375"},[1352,1354],"[handleMessage]",[999,1001],"[worker]",[1189,1191],[1371,1373],[1562,1564],[3631,3648],"[buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",[2648,2650],"[subscribeToMessage]",[859,861],"[collisionEndedEvents, collisionStartedEvents]",[1103,1105],[1975,1977],"[applyAngle, buffers, isDynamic, ref, uuid]",[3139,3230],"[isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",[4539,4551],"[passedUuid, workerSetBody, workerUpdateBody]",[5267,5289],"[uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",[5511,5531],"[uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",[6826,6828],"[cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",[8182,8184],[4585,4618],"[]",[6976,6988],"[handleMove, localState.mouseActive]",[608,613],[805,807],"[setDefaultCamera]"]