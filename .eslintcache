[{"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx":"1","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts":"2","/Users/simonhales/WebstormProjects/action-game/src/index.tsx":"3","/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts":"4","/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts":"5","/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx":"6","/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts":"7","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx":"8","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx":"9","/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/Player.tsx":"10","/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts":"11","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx":"12","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts":"13","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx":"14","/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts":"15","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx":"16","/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx":"17","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx":"18","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx":"19","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts":"20","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx":"21","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/Camera/Camera.tsx":"22","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx":"23","/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx":"24","/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts":"25","/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts":"26","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts":"27","/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx":"28","/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/hooks/useController.ts":"29","/Users/simonhales/WebstormProjects/action-game/src/game/meshes/components/MeshRefs/MeshRefs.tsx":"30","/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts":"31","/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts":"32","/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider.tsx":"33","/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts":"34","/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/MeshSubscriptions/MeshSubscriptions.tsx":"35","/Users/simonhales/WebstormProjects/action-game/src/game/worker/main/components/MeshLerper/MeshLerper.tsx":"36","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts":"37","/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts":"38","/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts":"39","/Users/simonhales/WebstormProjects/action-game/src/game/meshes/uuids.ts":"40","/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts":"41"},{"size":1618,"mtime":1609642807005,"results":"42","hashOfConfig":"43"},{"size":5230,"mtime":1609860002260,"results":"44","hashOfConfig":"43"},{"size":515,"mtime":1609486938761,"results":"45","hashOfConfig":"43"},{"size":969,"mtime":1609642790500,"results":"46","hashOfConfig":"43"},{"size":327,"mtime":1609642026794,"results":"47","hashOfConfig":"43"},{"size":169,"mtime":1609558795178,"results":"48","hashOfConfig":"43"},{"size":1473,"mtime":1609821522327,"results":"49","hashOfConfig":"43"},{"size":1882,"mtime":1609795704604,"results":"50","hashOfConfig":"43"},{"size":1496,"mtime":1609642813396,"results":"51","hashOfConfig":"43"},{"size":1064,"mtime":1609888362312,"results":"52","hashOfConfig":"43"},{"size":425,"mtime":1609483309640,"results":"53","hashOfConfig":"43"},{"size":4359,"mtime":1609889511072,"results":"54","hashOfConfig":"43"},{"size":670,"mtime":1609507892885,"results":"55","hashOfConfig":"43"},{"size":1662,"mtime":1609757247528,"results":"56","hashOfConfig":"43"},{"size":568,"mtime":1609559863619,"results":"57","hashOfConfig":"43"},{"size":446,"mtime":1609889701038,"results":"58","hashOfConfig":"43"},{"size":330,"mtime":1609749827670,"results":"59","hashOfConfig":"43"},{"size":172,"mtime":1609646322248,"results":"60","hashOfConfig":"43"},{"size":3033,"mtime":1609642152497,"results":"61","hashOfConfig":"43"},{"size":174,"mtime":1609754533629,"results":"62","hashOfConfig":"43"},{"size":448,"mtime":1609749739518,"results":"63","hashOfConfig":"43"},{"size":1240,"mtime":1609647722847,"results":"64","hashOfConfig":"43"},{"size":401,"mtime":1609751892777,"results":"65","hashOfConfig":"43"},{"size":1602,"mtime":1609761534728,"results":"66","hashOfConfig":"43"},{"size":556,"mtime":1609555207685,"results":"67","hashOfConfig":"43"},{"size":299,"mtime":1609858606200,"results":"68","hashOfConfig":"43"},{"size":774,"mtime":1609509393977,"results":"69","hashOfConfig":"43"},{"size":1947,"mtime":1609509491258,"results":"70","hashOfConfig":"43"},{"size":873,"mtime":1609823422091,"results":"71","hashOfConfig":"43"},{"size":1694,"mtime":1609758949150,"results":"72","hashOfConfig":"43"},{"size":8196,"mtime":1609823200098,"results":"73","hashOfConfig":"43"},{"size":602,"mtime":1608030846328,"results":"74","hashOfConfig":"43"},{"size":3835,"mtime":1609888635028,"results":"75","hashOfConfig":"43"},{"size":44,"mtime":1609889601860,"results":"76","hashOfConfig":"43"},{"size":4318,"mtime":1609889551083,"results":"77","hashOfConfig":"43"},{"size":691,"mtime":1609889602351,"results":"78","hashOfConfig":"43"},{"size":88,"mtime":1609752231122,"results":"79","hashOfConfig":"43"},{"size":172,"mtime":1609754738734,"results":"80","hashOfConfig":"43"},{"size":700,"mtime":1609753545982,"results":"81","hashOfConfig":"43"},{"size":58,"mtime":1609756233222,"results":"82","hashOfConfig":"43"},{"size":76,"mtime":1608030846328,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"1eylt58",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"87"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"87"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"87"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/Workers.tsx",["178","179"],"import React, {useEffect, useLayoutEffect, useState} from \"react\"\nimport { WorkersContext } from \"./context\"\nimport {useMessagesContext} from \"../Messages/context\";\nimport {WorkerOwnerMessageType} from \"../../workers/physics/types\";\nimport {MessageData} from \"../../workers/shared/types\";\n\nconst Workers: React.FC = ({children}) => {\n    const [physicsWorker, setPhysicsWorker] = useState<Worker | null>(null)\n    const [logicWorker, setLogicWorker] = useState<Worker | null>(null)\n\n    const {\n        handleMessage,\n    } = useMessagesContext()\n\n    useLayoutEffect(() => {\n        const physWorker = new Worker('../../workers/physics', { name: 'physicsWorker', type: 'module' })\n        const logiWorker = new Worker('../../workers/logic', { name: 'logicWorker', type: 'module' })\n        setPhysicsWorker(physWorker)\n        setLogicWorker(logiWorker)\n        const channel = new MessageChannel()\n        physWorker.postMessage({command: \"connect\"}, [channel.port1])\n        logiWorker.postMessage({command: \"connect\"}, [channel.port2])\n\n        logiWorker.onmessage= (event: MessageEvent) => {\n\n            const type = event.data.type\n\n            switch (type) {\n                case WorkerOwnerMessageType.MESSAGE:\n                    handleMessage(event.data.message as MessageData)\n                    break;\n            }\n\n        }\n\n    }, [])\n\n    if (!physicsWorker || !logicWorker) return null\n\n    return (\n        <WorkersContext.Provider value={{\n            physicsWorker,\n            logicWorker,\n        }}>\n            {children}\n        </WorkersContext.Provider>\n    )\n}\n\nexport default Workers",["180","181"],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/index.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/index.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/logic/index.ts",["182"],"/* eslint-disable no-restricted-globals */\n\n// because of some weird react/dev/webpack/something quirk\nimport {WorkerMessageType} from \"../physics/types\";\n\n(self as any).$RefreshReg$ = () => {};\n(self as any).$RefreshSig$ = () => () => {};\n\nconst setWorker = require(\"./react\").setWorker\nconst init = require(\"./react\").init\n\nlet physicsWorkerPort: MessagePort\n\nconst selfWorker = self as unknown as Worker\n\nselfWorker.onmessage = (event: MessageEvent) => {\n\n    switch( event.data.command )\n    {\n\n        case \"connect\":\n            physicsWorkerPort = event.ports[0];\n            setWorker(physicsWorkerPort)\n            return\n\n        case \"forward\":\n            physicsWorkerPort.postMessage( event.data.message );\n            return\n    }\n\n    const {type, props = {}} = event.data as {\n        type: WorkerMessageType,\n        props: any,\n    };\n\n    switch (type) {\n        case WorkerMessageType.INIT:\n            init()\n            break;\n    }\n\n}\n\nexport {}",["183","184"],"/Users/simonhales/WebstormProjects/action-game/src/components/Workers/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/components/App/App.tsx",[],["185","186"],"/Users/simonhales/WebstormProjects/action-game/src/physics/data.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/PhysicsProvider.tsx",["187","188","189","190","191"],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/Messages.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/Player.tsx",["192"],"/Users/simonhales/WebstormProjects/action-game/src/reportWebVitals.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/PhysicsHandler/PhysicsHandler.tsx",["193"],"import React, {useEffect} from \"react\"\nimport {useWorkersContext} from \"../../../../../../components/Workers/context\";\nimport PhysicsProvider, {useBuffers} from \"../../../../../../physics/components/PhysicsProvider/PhysicsProvider\";\nimport {useCollisionsProviderContext} from \"../../../../../../physics/components/CollisionsProvider/context\";\nimport {WorkerMessageType, WorkerOwnerMessageType} from \"../../../../../../workers/physics/types\";\nimport {storedPhysicsData} from \"../../../../../../physics/data\";\nimport CollisionsProvider from \"../../../../../../physics/components/CollisionsProvider/CollisionsProvider\";\nimport WorkerOnMessageProvider, {useWorkerOnMessage} from \"../../../../../worker/components/WorkerOnMessageProvider/WorkerOnMessageProvider\";\nimport PhysicsWorkerFixedUpdateProvider from \"../../../../../worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider\";\nimport MeshSubscriptions from \"../../../../../worker/components/MeshSubscriptions/MeshSubscriptions\";\nimport MeshLerper from \"../../../../../worker/main/components/MeshLerper/MeshLerper\";\n\nconst PhysicsHandler: React.FC = ({children}) => {\n\n    const {physicsWorker} = useWorkersContext()\n    const buffers = useBuffers()\n    const {handleBeginCollision, handleEndCollision} = useCollisionsProviderContext()\n    const workerOnMessage = useWorkerOnMessage()\n\n    useEffect(() => {\n\n        const loop = () => {\n            if(buffers.positions.byteLength !== 0 && buffers.angles.byteLength !== 0) {\n                physicsWorker.postMessage({ type: WorkerMessageType.STEP, ...buffers }, [buffers.positions.buffer, buffers.angles.buffer])\n            }\n        }\n\n        physicsWorker.postMessage({\n            type: WorkerMessageType.INIT,\n            props: {\n            }\n        })\n\n        loop()\n\n        const unsubscribe = workerOnMessage((event: MessageEvent) => {\n\n            const type = event.data.type\n\n            switch (type) {\n                case WorkerOwnerMessageType.FRAME:\n\n                    if (event.data.bodies) {\n                        storedPhysicsData.bodies = event.data.bodies.reduce(\n                            (acc: { [key: string]: number }, id: string) => ({\n                                ...acc,\n                                [id]: (event.data as any).bodies.indexOf(id)\n                            }),\n                            {}\n                        )\n                    }\n\n                    const positions = event.data.positions as Float32Array\n                    const angles = event.data.angles as Float32Array\n                    buffers.positions = positions\n                    buffers.angles = angles\n                    requestAnimationFrame(loop);\n                    break\n                case WorkerOwnerMessageType.SYNC_BODIES:\n                    storedPhysicsData.bodies = event.data.bodies.reduce(\n                        (acc: { [key: string]: number }, id: string) => ({\n                            ...acc,\n                            [id]: (event.data as any).bodies.indexOf(id)\n                        }),\n                        {}\n                    )\n                    break\n                case WorkerOwnerMessageType.BEGIN_COLLISION:\n                    handleBeginCollision(event.data.props as any)\n                    break\n                case WorkerOwnerMessageType.END_COLLISION:\n                    handleEndCollision(event.data.props as any)\n                    break\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [workerOnMessage])\n\n    return (\n        <PhysicsProvider buffers={buffers} worker={physicsWorker}>\n            <MeshSubscriptions>\n                <PhysicsWorkerFixedUpdateProvider worker={physicsWorker}>\n                    <MeshLerper/>\n                    {children}\n                </PhysicsWorkerFixedUpdateProvider>\n            </MeshSubscriptions>\n        </PhysicsProvider>\n    )\n}\n\nconst PhysicsWrapper: React.FC = ({children}) => {\n    const {physicsWorker} = useWorkersContext()\n    return (\n        <WorkerOnMessageProvider worker={physicsWorker}>\n            <CollisionsProvider>\n                <PhysicsHandler>\n                    {children}\n                </PhysicsHandler>\n            </CollisionsProvider>\n        </WorkerOnMessageProvider>\n    )\n}\n\nexport default PhysicsWrapper;","/Users/simonhales/WebstormProjects/action-game/src/physics/components/PhysicsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameCanvas/GameCanvas.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/shared/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/GameContents/GameContents.tsx",["194","195"],"import React, {useEffect} from \"react\"\nimport Lights from \"../../../Lights/Lights\";\nimport {Perf} from \"r3f-perf\";\nimport Floor from \"../../../Floor/Floor\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport Camera from \"../Camera/Camera\";\n\nconst GameContents: React.FC = () => {\n\n    return (\n        <>\n            <Camera/>\n            <Lights/>\n            <Floor/>\n            <Perf />\n        </>\n    )\n}\n\nexport default GameContents","/Users/simonhales/WebstormProjects/action-game/src/3d/components/Character/Character.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Lights/Lights.tsx",[],["196","197"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/LogicHandler/LogicHandler.tsx",["198"],"import React, {useEffect, useState} from \"react\"\nimport {useSubscribeToMessage} from \"../../../../../../components/Messages/context\";\nimport {\n    MessageKeys,\n    SyncComponentMessage,\n    SyncComponentMessageType,\n    SyncComponentType,\n    ValidProps\n} from \"../../../../../../workers/shared/types\";\nimport Player from \"../../../../../player/main/components/Player/Player\";\nimport {useWorkersContext} from \"../../../../../../components/Workers/context\";\nimport {WorkerMessageType} from \"../../../../../../workers/physics/types\";\n\nconst mappedComponentTypes = {\n    [SyncComponentType.PLAYER]: Player,\n}\n\nconst LogicHandler: React.FC = ({children}) => {\n\n    const {logicWorker} = useWorkersContext()\n\n    const subscribeToMessage = useSubscribeToMessage()\n\n    const [components, setComponents] = useState<{\n        [key: string]: {\n            componentType: SyncComponentType,\n            props: ValidProps,\n        },\n    }>({})\n\n    useEffect(() => {\n\n        logicWorker.postMessage({\n            type: WorkerMessageType.INIT,\n            props: {}\n        })\n\n    }, [logicWorker])\n\n    useEffect(() => {\n\n        const unsubscribe = subscribeToMessage(MessageKeys.SYNC_COMPONENT, (\n            {info, messageType, data}: SyncComponentMessage\n        ) => {\n\n            const props = data || {}\n\n            switch (messageType) {\n                case SyncComponentMessageType.MOUNT:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UPDATE:\n                    setComponents(state => {\n                        return {\n                            ...state,\n                            [info.componentKey]: {\n                                componentType: info.componentType,\n                                props,\n                            }\n                        }\n                    })\n                    break;\n                case SyncComponentMessageType.UNMOUNT:\n                    setComponents(state => {\n                        let update = {\n                            ...state,\n                        }\n                        delete update[info.componentKey]\n                        return update\n                    })\n                    break;\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [])\n\n    return (\n        <>\n            {children}\n            {\n                Object.entries(components).map(([key, {componentType, props}]) => {\n                    const Component = mappedComponentTypes[componentType]\n                    return Component ? <Component key={key} {...props}/> : null\n                })\n            }\n        </>\n    )\n}\n\nexport default LogicHandler","/Users/simonhales/WebstormProjects/action-game/src/utils/angles.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Floor/Floor.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/Camera/Camera.tsx",["199","200","201","202"],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/Game.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/components/Game/components/InputsHandler/InputsHandler.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/components/Messages/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/workers/physics/types.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/context.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/components/CollisionsProvider/CollisionsProvider.tsx",["203","204"],"/Users/simonhales/WebstormProjects/action-game/src/game/player/main/components/Player/hooks/useController.ts",["205"],"import {useCallback} from \"react\";\nimport {useFrame} from \"react-three-fiber\";\nimport {inputsRawState} from \"../../../../../main/inputs/state\";\nimport {BodyApi} from \"../../../../../../physics/hooks/hooks\";\nimport {Vec2} from \"planck-js\";\nimport { useFixedUpdate } from \"../../../../../worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider\";\n\nconst velocity = Vec2(0, 0)\n\nexport const useController = (uuid: string, api: BodyApi) => {\n\n    const onFrame = useCallback(() => {\n\n        const xVel = inputsRawState.horizontal\n        const yVel = inputsRawState.vertical\n\n        velocity.set(xVel * 5, yVel * 5)\n        api.setLinearVelocity(velocity)\n        // api.applyLinearImpulse(velocity, Vec2(0, 0))\n\n    }, [api])\n\n    const onFixedUpdate = useCallback(() => {\n\n    }, [api])\n\n    useFrame(onFrame)\n    useFixedUpdate(onFixedUpdate)\n\n}","/Users/simonhales/WebstormProjects/action-game/src/game/meshes/components/MeshRefs/MeshRefs.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/hooks/hooks.ts",["206","207","208","209","210","211","212","213","214"],"/Users/simonhales/WebstormProjects/action-game/src/physics/cache.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/PhysicsWorkerFixedUpdateProvider/PhysicsWorkerFixedUpdateProvider.tsx",["215","216"],"import React, {createContext, useCallback, useContext, useEffect, useRef, useState} from \"react\"\nimport {useWorkerOnMessage} from \"../WorkerOnMessageProvider/WorkerOnMessageProvider\";\nimport {WorkerMessageType, WorkerOwnerMessageType} from \"../../../../workers/physics/types\";\nimport {PHYSICS_UPDATE_RATE} from \"../../../../physics/config\";\nimport {useWorkersContext} from \"../../../../components/Workers/context\";\nimport {useUpdateMeshes} from \"../MeshSubscriptions/MeshSubscriptions\";\n\ntype State = {\n    onFixedUpdate: (callback: (delta: number) => void) => () => void,\n    getPhysicsStepTimeRemainingRatio: (time: number) => number,\n}\n\nconst Context = createContext(null as unknown as State)\n\nexport const useGetPhysicsStepTimeRemainingRatio = () => {\n    return useContext(Context).getPhysicsStepTimeRemainingRatio\n}\n\nexport const useFixedUpdate = (callback: (delta: number) => void) => {\n\n    const onFixedUpdate = useContext(Context).onFixedUpdate\n\n    useEffect(() => {\n\n        const unsubscribe = onFixedUpdate(callback)\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [onFixedUpdate, callback])\n\n}\n\nconst PhysicsWorkerFixedUpdateProvider: React.FC<{\n    worker: Worker | MessagePort,\n    noLerping?: boolean,\n}> = ({children, worker, noLerping = false}) => {\n\n    const lastUpdateRef = useRef(Date.now())\n    const countRef = useRef(0)\n    const callbacksRef = useRef<{\n        [key: string]: (delta: number) => void,\n    }>({})\n    const updateMeshes = useUpdateMeshes()\n\n    const getPhysicsStepTimeRemainingRatio = useCallback((previousTime: number) => {\n        const nextExpectedUpdate = lastUpdateRef.current + PHYSICS_UPDATE_RATE\n        const time = Date.now()\n        let ratio = (time - previousTime) / (nextExpectedUpdate - previousTime)\n        ratio = ratio > 1 ? 1 : ratio\n        ratio = ratio < 0 ? 0 : ratio\n        return ratio\n    }, [lastUpdateRef])\n\n    const onFixedUpdate = useCallback((callback: (delta: number) => void) => {\n\n        const key = countRef.current\n        countRef.current += 1\n\n        callbacksRef.current[key] = callback\n\n        const unsubscribe = () => {\n            delete callbacksRef.current[key]\n        }\n\n        return unsubscribe\n\n    }, [callbacksRef])\n\n    const onMessage = useWorkerOnMessage()\n\n    useEffect(() => {\n\n        const onPhysicsStep = () => {\n\n            const lastUpdate = lastUpdateRef.current\n            const now = Date.now()\n            const delta = !lastUpdate ? 1 / 60 : (now - lastUpdate) / 1000;\n            lastUpdateRef.current = now\n\n            const callbacks = callbacksRef.current\n\n            Object.values(callbacks).forEach((callback) => {\n                callback(delta)\n            })\n\n        }\n\n        const unsubscribe = onMessage((event: MessageEvent) => {\n\n            const type = event.data.type\n\n            if (type === WorkerOwnerMessageType.PHYSICS_STEP) {\n                onPhysicsStep()\n                const positions = event.data.positions as Float32Array\n                const angles = event.data.angles as Float32Array\n                if (positions && angles) {\n                    updateMeshes(positions, angles, noLerping)\n                    worker.postMessage({\n                        type: WorkerMessageType.PHYSICS_STEP_PROCESSED,\n                        positions,\n                        angles,\n                    }, [positions.buffer, angles.buffer])\n                }\n            }\n\n        })\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [onMessage, callbacksRef, lastUpdateRef, worker, updateMeshes, noLerping])\n\n    return (\n        <Context.Provider value={{\n            onFixedUpdate,\n            getPhysicsStepTimeRemainingRatio,\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default PhysicsWorkerFixedUpdateProvider","/Users/simonhales/WebstormProjects/action-game/src/physics/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/worker/components/MeshSubscriptions/MeshSubscriptions.tsx",["217"],"import React, {createContext, useCallback, useContext, useEffect, useRef, useState} from \"react\"\nimport {Object3D} from \"three\";\nimport {ValidUUID} from \"../../../../utils/ids\";\nimport {getPositionAndAngle, storedPhysicsData} from \"../../../../physics/data\";\nimport {lerp} from \"../../../../utils/numbers\";\n\n// store mesh refs\n// receive physics data\n// update mesh based upon either useFrame, or just when the data comes in.\n\ntype ContextState = {\n    lerpMeshes: (getPhysicsStepTimeRemainingRatio: (time: number) => number) => void,\n    updateMeshes: (positions: Float32Array, angles: Float32Array, immediate: boolean) => void,\n    addSubscription: (uuid: ValidUUID, object: Object3D, applyAngle: boolean) => () => void,\n}\n\nconst Context = createContext(null as unknown as ContextState)\n\nexport const useLerpMeshes = () => {\n    return useContext(Context).lerpMeshes\n}\n\nexport const useAddMeshSubscription = (uuid: ValidUUID, object: Object3D, applyAngle: boolean = true) => {\n    const addSubscription = useContext(Context).addSubscription\n\n    useEffect(() => {\n\n        const unsubscribe = addSubscription(uuid, object, applyAngle)\n\n        return () => {\n            unsubscribe()\n        }\n\n    }, [uuid, object, applyAngle, addSubscription])\n\n}\n\nexport const useUpdateMeshes = () => {\n    return useContext(Context).updateMeshes\n}\n\nconst MeshSubscriptions: React.FC = ({children}) => {\n\n    const subscriptionsRef = useRef<{\n        [uuid: string]: {\n            uuid: ValidUUID,\n            object: Object3D,\n            applyAngle: boolean,\n            lastUpdate?: number,\n            target?: {\n                position: [number, number],\n                angle: number,\n            }\n        }\n    }>({})\n\n    const lerpMeshes = useCallback((getPhysicsStepTimeRemainingRatio: (time: number) => number) => {\n\n        Object.values(subscriptionsRef.current).forEach(({uuid, object, target, applyAngle, lastUpdate}) => {\n            if (!target) return\n            const {position, angle} = target\n            let physicsRemainingRatio = getPhysicsStepTimeRemainingRatio(lastUpdate ?? Date.now())\n            object.position.x = lerp(object.position.x, position[0], physicsRemainingRatio)\n            object.position.y = lerp(object.position.y, position[1], physicsRemainingRatio)\n            if (applyAngle) {\n                object.rotation.z = angle // todo - lerp\n            }\n            subscriptionsRef.current[uuid].lastUpdate = Date.now()\n        })\n\n    }, [subscriptionsRef])\n\n    const updateMeshes = useCallback((positions: Float32Array, angles: Float32Array, immediate: boolean) => {\n\n        Object.entries(subscriptionsRef.current).forEach(([uuid, {object, target, applyAngle}]) => {\n            // todo - store storedPhysicsData not as global elsewhere\n            const index = storedPhysicsData.bodies[uuid]\n            const update = getPositionAndAngle({positions, angles}, index)\n            if (update) {\n\n                if (immediate) {\n                    object.position.x = update.position[0]\n                    object.position.y = update.position[1]\n                    if (applyAngle) {\n                        object.rotation.x = update.angle\n                    }\n                } else if (target) {\n                    object.position.x = target.position[0]\n                    object.position.y = target.position[1]\n                    if (applyAngle) {\n                        object.rotation.x = target.angle\n                    }\n                }\n                subscriptionsRef.current[uuid].target = {\n                    position: update.position,\n                    angle: update.angle,\n                }\n            }\n        })\n\n    }, [subscriptionsRef])\n\n    const addSubscription = useCallback((uuid: ValidUUID, object: Object3D, applyAngle: boolean) => {\n\n        subscriptionsRef.current[uuid] = {\n            uuid,\n            object,\n            applyAngle,\n        }\n\n        const unsubscribe = () => {\n            delete subscriptionsRef.current[uuid]\n        }\n\n        return unsubscribe\n\n    }, [subscriptionsRef])\n\n    return (\n        <Context.Provider value={{\n            lerpMeshes,\n            updateMeshes,\n            addSubscription,\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default MeshSubscriptions","/Users/simonhales/WebstormProjects/action-game/src/game/worker/main/components/MeshLerper/MeshLerper.tsx",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/state.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/utils/vectors.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/main/inputs/config.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/game/meshes/uuids.ts",[],"/Users/simonhales/WebstormProjects/action-game/src/physics/collisions/data.ts",[],{"ruleId":"218","severity":1,"message":"219","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":36,"column":8,"nodeType":"224","endLine":36,"endColumn":10,"suggestions":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"218","severity":1,"message":"230","line":31,"column":18,"nodeType":"220","messageId":"221","endLine":31,"endColumn":23},{"ruleId":"226","replacedBy":"231"},{"ruleId":"228","replacedBy":"232"},{"ruleId":"226","replacedBy":"233"},{"ruleId":"228","replacedBy":"234"},{"ruleId":"218","severity":1,"message":"219","line":1,"column":29,"nodeType":"220","messageId":"221","endLine":1,"endColumn":38},{"ruleId":"222","severity":1,"message":"235","line":28,"column":8,"nodeType":"224","endLine":28,"endColumn":10,"suggestions":"236"},{"ruleId":"222","severity":1,"message":"235","line":35,"column":8,"nodeType":"224","endLine":35,"endColumn":10,"suggestions":"237"},{"ruleId":"222","severity":1,"message":"235","line":42,"column":8,"nodeType":"224","endLine":42,"endColumn":10,"suggestions":"238"},{"ruleId":"222","severity":1,"message":"235","line":49,"column":8,"nodeType":"224","endLine":49,"endColumn":10,"suggestions":"239"},{"ruleId":"218","severity":1,"message":"240","line":8,"column":21,"nodeType":"220","messageId":"221","endLine":8,"endColumn":32},{"ruleId":"222","severity":1,"message":"241","line":82,"column":8,"nodeType":"224","endLine":82,"endColumn":25,"suggestions":"242"},{"ruleId":"218","severity":1,"message":"219","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"243","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":23},{"ruleId":"226","replacedBy":"244"},{"ruleId":"228","replacedBy":"245"},{"ruleId":"222","severity":1,"message":"246","line":88,"column":8,"nodeType":"224","endLine":88,"endColumn":10,"suggestions":"247"},{"ruleId":"218","severity":1,"message":"219","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"248","line":3,"column":34,"nodeType":"220","messageId":"221","endLine":3,"endColumn":41},{"ruleId":"218","severity":1,"message":"249","line":4,"column":9,"nodeType":"220","messageId":"221","endLine":4,"endColumn":18},{"ruleId":"222","severity":1,"message":"250","line":17,"column":8,"nodeType":"224","endLine":17,"endColumn":10,"suggestions":"251"},{"ruleId":"222","severity":1,"message":"252","line":22,"column":8,"nodeType":"224","endLine":22,"endColumn":10,"suggestions":"253"},{"ruleId":"222","severity":1,"message":"252","line":30,"column":8,"nodeType":"224","endLine":30,"endColumn":10,"suggestions":"254"},{"ruleId":"222","severity":1,"message":"255","line":25,"column":8,"nodeType":"224","endLine":25,"endColumn":13,"suggestions":"256"},{"ruleId":"218","severity":1,"message":"257","line":1,"column":9,"nodeType":"220","messageId":"221","endLine":1,"endColumn":18},{"ruleId":"222","severity":1,"message":"258","line":43,"column":8,"nodeType":"224","endLine":43,"endColumn":10,"suggestions":"259"},{"ruleId":"222","severity":1,"message":"260","line":70,"column":8,"nodeType":"224","endLine":70,"endColumn":99,"suggestions":"261"},{"ruleId":"222","severity":1,"message":"262","line":109,"column":8,"nodeType":"224","endLine":109,"endColumn":20,"suggestions":"263"},{"ruleId":"222","severity":1,"message":"264","line":133,"column":8,"nodeType":"224","endLine":133,"endColumn":30,"suggestions":"265"},{"ruleId":"222","severity":1,"message":"264","line":142,"column":8,"nodeType":"224","endLine":142,"endColumn":28,"suggestions":"266"},{"ruleId":"218","severity":1,"message":"267","line":168,"column":12,"nodeType":"220","messageId":"221","endLine":168,"endColumn":21},{"ruleId":"222","severity":1,"message":"268","line":195,"column":8,"nodeType":"224","endLine":195,"endColumn":10,"suggestions":"269"},{"ruleId":"222","severity":1,"message":"268","line":251,"column":8,"nodeType":"224","endLine":251,"endColumn":10,"suggestions":"270"},{"ruleId":"218","severity":1,"message":"271","line":1,"column":75,"nodeType":"220","messageId":"221","endLine":1,"endColumn":83},{"ruleId":"218","severity":1,"message":"272","line":5,"column":9,"nodeType":"220","messageId":"221","endLine":5,"endColumn":26},{"ruleId":"218","severity":1,"message":"271","line":1,"column":75,"nodeType":"220","messageId":"221","endLine":1,"endColumn":83},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'handleMessage'. Either include it or remove the dependency array.","ArrayExpression",["273"],"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"'props' is assigned a value but never used.",["274"],["275"],["274"],["275"],"React Hook useCallback has a missing dependency: 'worker'. Either include it or remove the dependency array.",["276"],["277"],["278"],["279"],"'useBodySync' is defined but never used.","React Hook useEffect has missing dependencies: 'buffers', 'handleBeginCollision', 'handleEndCollision', and 'physicsWorker'. Either include them or remove the dependency array.",["280"],"'OrbitControls' is defined but never used.",["274"],["275"],"React Hook useEffect has a missing dependency: 'subscribeToMessage'. Either include it or remove the dependency array.",["281"],"'Matrix4' is defined but never used.","'useTweaks' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'setDefaultCamera'. Either include it or remove the dependency array.",["282"],"React Hook useCallback has missing dependencies: 'collisionEndedEvents' and 'collisionStartedEvents'. Either include them or remove the dependency array.",["283"],["284"],"React Hook useCallback has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array.",["285"],"'MathUtils' is defined but never used.","React Hook useEffect has missing dependencies: 'applyAngle', 'buffers', 'isDynamic', 'ref', and 'uuid'. Either include them or remove the dependency array.",["286"],"React Hook useCallback has a missing dependency: 'buffers'. Either include it or remove the dependency array.",["287"],"React Hook useMemo has missing dependencies: 'workerSetBody' and 'workerUpdateBody'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has missing dependencies: 'addCollisionHandler' and 'removeCollisionHandler'. Either include them or remove the dependency array.",["289"],["290"],"'isDynamic' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'cacheKey', 'listenForCollisions', 'propsFn', 'ref', 'uuid', 'workerAddBody', and 'workerRemoveBody'. Either include them or remove the dependency array. If 'propsFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],["292"],"'useState' is defined but never used.","'useWorkersContext' is defined but never used.",{"desc":"293","fix":"294"},"no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"295","fix":"297"},{"desc":"295","fix":"298"},{"desc":"295","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"306","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},"Update the dependencies array to be: [handleMessage]",{"range":"324","text":"325"},"Update the dependencies array to be: [worker]",{"range":"326","text":"327"},{"range":"328","text":"327"},{"range":"329","text":"327"},{"range":"330","text":"327"},"Update the dependencies array to be: [buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",{"range":"331","text":"332"},"Update the dependencies array to be: [subscribeToMessage]",{"range":"333","text":"334"},"Update the dependencies array to be: [setDefaultCamera]",{"range":"335","text":"336"},"Update the dependencies array to be: [collisionEndedEvents, collisionStartedEvents]",{"range":"337","text":"338"},{"range":"339","text":"338"},"Update the dependencies array to be: []",{"range":"340","text":"341"},"Update the dependencies array to be: [applyAngle, buffers, isDynamic, ref, uuid]",{"range":"342","text":"343"},"Update the dependencies array to be: [isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",{"range":"344","text":"345"},"Update the dependencies array to be: [passedUuid, workerSetBody, workerUpdateBody]",{"range":"346","text":"347"},"Update the dependencies array to be: [uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",{"range":"348","text":"349"},"Update the dependencies array to be: [uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",{"range":"350","text":"351"},"Update the dependencies array to be: [cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",{"range":"352","text":"353"},{"range":"354","text":"353"},[1352,1354],"[handleMessage]",[999,1001],"[worker]",[1189,1191],[1371,1373],[1562,1564],[3559,3576],"[buffers, handleBeginCollision, handleEndCollision, physicsWorker, workerOnMessage]",[2648,2650],"[subscribeToMessage]",[696,698],"[setDefaultCamera]",[859,861],"[collisionEndedEvents, collisionStartedEvents]",[1103,1105],[807,812],"[]",[1870,1872],"[applyAngle, buffers, isDynamic, ref, uuid]",[3034,3125],"[isDynamic, ref, buffers, uuid, getPhysicsStepTimeRemainingRatio]",[4434,4446],"[passedUuid, workerSetBody, workerUpdateBody]",[5162,5184],"[uuid, onCollideStart, addCollisionHandler, removeCollisionHandler]",[5406,5426],"[uuid, onCollideEnd, addCollisionHandler, removeCollisionHandler]",[6721,6723],"[cacheKey, listenForCollisions, propsFn, ref, uuid, workerAddBody, workerRemoveBody]",[8077,8079]]